version: '3.8'

services:
  aca-frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: aca-licitacoes-frontend
    restart: unless-stopped
    ports:
      - "4200:80"
    environment:
      API_URL: http://localhost:3000
    depends_on:
      - aca-backend
    networks:
      - aca-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

  aca-backend:
    build:
      context: ../ACA-Licitacoes-Back/aca-back
      dockerfile: Dockerfile
    container_name: aca-licitacoes-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://aca_user:aca_password@postgres:5432/aca_licitacoes?schema=public
      JWT_SECRET: your-super-secret-jwt-key-here
      PORT: 3000
    ports:
      - "3000:3000"
    volumes:
      - ../ACA-Licitacoes-Back/aca-back/uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - aca-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: postgres:15-alpine
    container_name: aca-licitacoes-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: aca_licitacoes
      POSTGRES_USER: aca_user
      POSTGRES_PASSWORD: aca_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=pt_BR.UTF-8 --lc-ctype=pt_BR.UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../ACA-Licitacoes-Back/aca-database/init-scripts:/docker-entrypoint-initdb.d
    networks:
      - aca-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U aca_user -d aca_licitacoes"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
    driver: local

networks:
  aca-network:
    driver: bridge